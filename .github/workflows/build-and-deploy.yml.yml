name: Build and Deploy

on:
  push:
    branches:
      - test-field

jobs:
  Lambda-Code:
    runs-on: ubuntu-latest
    outputs:
      LAMBDA_TF: ${{ steps.set-lambda-tf.outputs.LAMBDA_TF }}
    steps:
      - name: Lade neuen Repo-Zustand
        uses: actions/checkout@v4
      - name: List Lambda Functions
        id: set-lambda-tf
        run: |
          cd ${{ github.workspace }}
          echo "::set-output name=LAMBDA_TF::$(bash ./.github/scripts/lsdirs.sh)"
          echo "LAMBDI.JSON FILE Created:"
          cat lambdi.json

  Build-and-Zip-Lambdas2:
    runs-on: ubuntu-latest
    needs: Lambda-Code
    steps:
      - name: Lade neuen Repo-Zustand
        uses: actions/checkout@v4  
      - name: Install zip
        uses: montudor/action-zip@v1       
      - name: installiere nodeJs
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Display Funktion - ${{ needs.Lambda-Code.outputs.LAMBDA_TF }}
        run: echo "packing Lambda-Funktion ${{ needs.Lambda-Code.outputs.LAMBDA_TF }}"
      - name: Cache node-modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/${{ needs.Lambda-Code.outputs.LAMBDA_TF }}
          key: ${{ needs.Lambda-Code.outputs.LAMBDA_TF }}-packages-${{ hashFiles ('${{ needs.Lambda-Code.outputs.LAMBDA_TF }}/package-lock.json') }}
      - name: install node_modules
        if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
        working-directory: ${{ github.workspace }}/${{ needs.Lambda-Code.outputs.LAMBDA_TF }}
        run: |
            npm install
            npm ci
      - name: Zip function
        run: zip -q -r ${{ needs.Lambda-Code.outputs.LAMBDA_TF }}.zip ${{ needs.Lambda-Code.outputs.LAMBDA_TF }} node_modules package.json index.js package-lock.json
      - name: Display result
        run: echo "$(ls ${{ needs.Lambda-Code.outputs.LAMBDA_TF }}.zip)"
      - name: Upload function zip to S3
        run: aws s3 cp ./${{ needs.Lambda-Code.outputs.LAMBDA_TF }}.zip s3://tfstate-bucket-abschlussproject/${{ needs.Lambda-Code.outputs.LAMBDA_TF }}.zip --acl public-read --region eu-central-1
      - name: Upload to S3
        run: |
          aws s3 sync ./build s3://tfstate-bucket-abschlussproject/ --delete --acl public-read --region eu-central-1
        env:
          AWS_CONFIG: ${{ secrets.AWS_CONFIG }}

  Deploy-Lambdas-and-Trigger-Terraform:
    runs-on: ubuntu-latest
    needs: Build-and-Zip-Lambdas2
    steps:
      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-central-1
        env:
          AWS_CONFIG: ${{ secrets.AWS_CONFIG }}
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0
      - name: Deploy Lambda-Function and Trigger Terraform
        run: |
          echo "Deploying ${{ needs.Lambda-Code.outputs.LAMBDA_TF }}.zip to S3"
          aws s3 cp ${{ needs.Lambda-Code.outputs.LAMBDA_TF }}.zip s3://tfstate-bucket-abschlussproject/${{
