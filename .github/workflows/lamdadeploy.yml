name: Backend Lambda Deploy S3

on:
  push:
    branches:
      - test-field

jobs:
  aws-job:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS CLI
        run: |
          mkdir -p ~/.aws/
          echo "$super_secret" > ~/.aws/credentials
        env:
          super_secret: ${{ secrets.AWS_CONFIG }}

      - name: Show AWS credentials
        run: cat ~/.aws/credentials

      - name: List AWS profiles
        run: aws configure list-profiles

      - name: List S3 buckets
        run: aws s3 ls --region eu-central-1 --profile techstarter

  Lambda-Code:
    runs-on: ubuntu-latest
    needs: aws-job
    outputs:
      LAMBDA_TF: ${{ steps.list-functions.outputs.LAMBDA_TF }}
    steps:
      - name: Lade neuen Repo-Zustand
        uses: actions/checkout@v4
      - name: List Lambda Functions
        working-directory: ${{ github.workspace }}
        id: list-functions
        run: |
          cd ${{ github.workspace }}
          echo "LAMBDA_TF=$(bash ./.github/scripts/lsdirs.sh)" >> $GITHUB_OUTPUT
          echo "LAMBDI.JSON FILE Created:"
          cat lambdi.json

      - name: Check lambdi.json existence
        run: |
          echo "lambdi.json exists: $(ls -l lambdi.json)"

      - name: result list-functions
        run: echo "${{ steps.list-functions.outputs.LAMBDA_TF }}"
        # trigger Matrix-Job Build-and-Zip-Lambdas

  Build-and-Zip-Lambdas2:
    needs: Lambda-Code
    strategy:
      matrix:
        lambda_function: ${{ fromJson(needs.Lambda-Code.outputs.LAMBDA_TF) }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Check if package.json exists
        run: test -f ${{ matrix.lambda_function }}/package.json || echo "No package.json found"
      
      - name: Install dependencies
        run: |
          cd ${{ matrix.lambda_function }}
          npm install
          npm ci



      - name: Zip function
        run: zip -q -r ${{ matrix.lambda_function }}.zip ${{ matrix.lambda_function }} node_modules package.json index.js package-lock.json

      - name: Display result
        run: echo "$(ls ${{ matrix.lambda_function }}.zip)"

      - name: Upload function zip to S3
        run: |
          echo "Current directory: $(pwd)"
          echo "Files in the current directory: $(ls)"
          echo "Deploying ${{ matrix.lambda_function }}.zip to S3"
          aws s3 cp ./${{ matrix.lambda_function }}.zip s3://tf-backend-abschlussprojekt/${{ matrix.lambda_function }}.zip --acl public-read --region eu-central-1
        env:
          super_secret: ${{ secrets.AWS_CONFIG }}

      - name: Show AWS Config
        run: aws configure list
        env:
          super_secret: ${{ secrets.AWS_CONFIG }}


  Deploy-Lambdas-and-Trigger-Terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: Configure AWS CLI
        run: |
          mkdir -p ~/.aws/
          echo "$super_secret" > ~/.aws/credentials
        env:
          super_secret: ${{ secrets.AWS_CONFIG }}

          
      - name: Deploy Lambda-Function and Trigger Terraform
        run: |
          echo "Deploying ${{ matrix.lambda_function }}.zip to S3"
          aws s3 cp ${{ matrix.lambda_function }}.zip s3://tf-backend-abschlussprojekt/${{ matrix.lambda_function }}.zip --acl public-read --region eu-central-1
          echo "Triggering Terraform deployment..."
          terraform init
          terraform validate
          terraform plan
          terraform apply -auto-approve
