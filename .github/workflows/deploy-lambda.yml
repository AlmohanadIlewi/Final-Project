name: Deploy Lambda to S3 Bucket

on:
  push:
    branches:
      - test-field

jobs:
  prepare:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm install -g aws-cli

      - name: Install jq
        run: sudo apt-get install jq
      - name: Show jq version
        run: jq --version

      - name: Add execute permissions to lsdirs.sh
        run: chmod +x ./.github/scripts/lsdirs.sh

      - name: Run lsdirs.sh and zip Lambda functions
        run: |
          ./.github/scripts/lsdirs.sh

      - name: function-zips
        id: cache-function-zips
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}
        run: |
          cd ${{ github.workspace }}
          zip -q -r "${{ matrix.lambda_function }}.zip" "${{ matrix.lambda_function }}" package.json index.js package-lock.json
          echo "packed function ${{ matrix.lambda_function }}"

      - name: List ZIP files
        run: find . -type f -name '*.zip'

  deploy:
    needs: prepare
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS CLI
        run: |
          mkdir -p ~/.aws/
          echo "AWS_ACCESS_KEY_ID = $AWS_ACCESS_KEY_ID" >> ~/.aws/config
          echo "AWS_SECRET_ACCESS_KEY = $AWS_SECRET_ACCESS_KEY" >> ~/.aws/config
          echo "AWS_REGION = eu-central-1" >> ~/.aws/config
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Show AWS credentials
        run: cat ~/.aws/config

      - name: Zip lambda-functions directory
        run: zip -r lambda-functions.zip lambda-functions/

      - name: Upload Lambda ZIPs to S3
        run: |
          S3_BUCKET=tfstate-bucket-abschlussproject
          for file in $(find . -type f -name '*.zip'); do
            aws s3 cp "$file" "s3://$S3_BUCKET/$(basename "$file")" \
              --region eu-central-1 \
              --access-key $AWS_ACCESS_KEY_ID \
              --secret-key $AWS_SECRET_ACCESS_KEY
          done

      - name: Deploy Lambdi.json to S3
        run: aws s3 sync ${{ github.workspace }}/public/ s3://tfstate-bucket-abschlussproject/ --delete --acl=public-read --profile projekt || true

  cleanup:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: Deploy Lambda-Function and Trigger Terraform
        run: |
          echo "Deploying ${{ matrix.lambda_function }}.zip to S3"
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region eu-central-1
          aws s3 cp ${{ matrix.lambda_function }}.zip s3://tfstate-bucket-abschlussproject/${{ matrix.lambda_function }}.zip --acl public-read
          echo "Triggering Terraform deployment..."
          terraform init
          terraform validate
          terraform plan
          terraform apply -auto-approve
