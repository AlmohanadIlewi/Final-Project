name: 'Build and upload to S3 Bucket'

on:
  push:
    branches:
      - test-field

jobs:
  Build_and_Upload:
    permissions:
      actions: write
      contents: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: 'Generate Tag Version'
        id: generate_tag_version
        run: |
          TAG=$(date +%Y%m%d)-$(date +%H%M%S)
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Tag Version: $TAG" >> $GITHUB_STEP_SUMMARY
    
      - name: 'Create Zip File'
        id: 'create_package'
        run: |
          PACKAGE_NAME="${{ steps.generate_tag_version.outputs.tag }}.zip"
          echo "package_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
          cd lambda-functions  # Assuming your Lambda functions are in a directory called "lambda-functions"
          zip -r $GITHUB_WORKSPACE/$PACKAGE_NAME .

      # - name: 'Configure AWS Credentials'
      #   uses: aws-actions/configure-aws-credentials@v1-node16
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: eu-central-1  # Replace with your desired AWS region

      - name: Configure AWS CLI
              run: |
                mkdir -p ~/.aws/
                echo "$super_secret" > ~/.aws/credentials
              env:
                super_secret: ${{ secrets.AWS_CONFIG1 }}
      
            - name: Show AWS credentials
              run: cat ~/.aws/credentials
      
            - name: List AWS profiles
              run: aws configure list-profiles
      
            - name: List S3 buckets
              run: aws s3 ls --region eu-central-1 --profile techstarter


      - name: 'Upload to S3 Bucket'
        run: aws s3 cp $GITHUB_WORKSPACE/${{ steps.create_package.outputs.package_name }} s3://tf-backend-abschlussprojekt/

      - uses: actions/github-script@v6
        name: 'Create Git Tag'
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ steps.generate_tag_version.outputs.tag }}',
              sha: context.sha
            })
